@page
@model VinylVaultWeb.Pages.ProfileModel
@{
    ViewData["Title"] = "Profile";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Your Profile</h2>

    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-success">@Model.Message</div>
    }

    <form method="post" asp-page-handler="Save">
        <div class="mb-3">
            <label class="form-label">Email (read-only)</label>
            <input class="form-control" value="@Model.User.Email" disabled />
        </div>

        <div class="mb-3">
            <label asp-for="User.FullName" class="form-label">Full Name</label>
            <input asp-for="User.FullName" class="form-control" />
        </div>

        <div class="mb-3">
            <label asp-for="User.Address" class="form-label">Address</label>
            <input asp-for="User.Address" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>

    <hr class="my-4" />

    <h5>Seller Status</h5>
    @if (Model.User.Role == "Seller")
    {
        <p class="text-success">You are currently a <strong>Seller</strong>.</p>

        <hr class="my-4" />
        <h5>Ratings & Reviews</h5>

        @if (Model.SellerRatings.Any())
        {
            <p>
                Average Rating:
                <strong>@Model.SellerRatings.Average(r => r.Rating).ToString("0.0")</strong>
                <span class="review-stars">
                    @{
                        int fullStars = (int)Model.SellerRatings.Average(r => r.Rating);
                        for (int i = 0; i < 5; i++)
                        {
                            @((i < fullStars) ? "★" : "☆")
                        }
                    }
                </span>
                (@Model.SellerRatings.Count review(s))
            </p>

            <div class="scrollable-reviews">
                <ul class="list-group">
                    @foreach (var review in Model.SellerRatings.Take(5))
                    {
                        <li class="list-group-item">
                            <strong>@review.BuyerEmail</strong> rated:
                            <span class="review-stars">
                                @{
                                    for (int i = 0; i < 5; i++)
                                    {
                                        @((i < review.Rating) ? "★" : "☆")
                                    }
                                }
                            </span><br />
                            <em class="review-comment">
                                @{
                                    var fullComment = review.Comment ?? "";
                                    var isLong = fullComment.Length > 100;
                                    var shortComment = isLong ? fullComment.Substring(0, 100) + "..." : fullComment;
                                }
                                <span class="short">@shortComment</span>
                                @if (isLong)
                                {
                                    <span class="full d-none">@fullComment</span>
                                    <span class="read-more-btn" onclick="toggleComment(this)">read more</span>
                                }
                            </em><br />
                            <small class="text-muted">@review.CreatedAt.ToLocalTime().ToString("g")</small>
                        </li>
                    }
                </ul>

                <div class="pagination">
                    <span class="page-btn">Prev</span>
                    <span class="page-btn">1</span>
                    <span class="page-btn">2</span>
                    <span class="page-btn">Next</span>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">You have not received any ratings yet.</p>
        }
    }
    else
    {
        <p>You are currently a <strong>User</strong>.</p>
        <button type="button" class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#sellerModal">
            Apply for Seller Access
        </button>
    }

    <div class="modal fade" id="sellerModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form method="post" asp-page-handler="BecomeSeller">
                    <div class="modal-header">
                        <h5 class="modal-title">Seller Upgrade</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Becoming a seller allows you to list and manage vinyl records on VinylVault.</p>
                        <p>Are you sure you want to upgrade your account?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Yes, Become a Seller</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function toggleComment(btn) {
            const li = btn.closest('li');
            const short = li.querySelector('.short');
            const full = li.querySelector('.full');
            if (full.classList.contains('d-none')) {
                full.classList.remove('d-none');
                short.style.display = 'none';
                btn.textContent = 'show less';
            } else {
                full.classList.add('d-none');
                short.style.display = 'inline';
                btn.textContent = 'read more';
            }
        }
    </script>
}
